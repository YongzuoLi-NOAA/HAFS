#! /usr/bin/env python

# screen issue
import matplotlib
matplotlib.use('Agg')

from scipy.ndimage import gaussian_filter1d
from netCDF4 import MFDataset, Dataset, num2date, date2num
import numpy as np
import matplotlib.pyplot as plt
#import matplotlib.tri as tri
#from mpl_toolkits.basemap import Basemap
import matplotlib.cm as cm
import glob
import matplotlib
import numpy.ma as ma
import datetime
from dateutil.relativedelta import relativedelta
import sys
import os
from os.path import join
###############################################################
yyyymmddhh='YYYYMMDDHH'

hrnhc=[]
pnhc=[]
lines = open("best.track", "r")
for line in lines:
  newline = line.split(",")
  ss = str(np.squeeze(newline[2])).strip()
  mm0=float(yyyymmddhh[4:6])
  dd0=float(yyyymmddhh[6:8])
  hh0=float(yyyymmddhh[8:10])
 
  mm=float(ss[4:6])
  dd=float(ss[6:8])
  hh=float(ss[8:10])
  hrs=(mm-mm0)*31*24+(dd-dd0)*24+hh-hh0
  print(mm,dd,hh,hrs)
  b = float(newline[8])

  hrnhc.append(hrs)
  pnhc.append(b)
  
lines.close()
#sys.exit()

hra=[]
pa=[]
#lines = open("ana.track", "r")
#for line in lines:
#  newline = line.split(",")
#  a = float(newline[5])
#  b = float(newline[8])

#  hra.append(a)
#  pa.append(b)
#lines.close()

hrb=[]
pb=[]
lines = open("mom6.track", "r")
for line in lines:
  newline = line.split(",")
  a = float(newline[5])
  b = float(newline[8])

  hrb.append(a)
  pb.append(b)
lines.close()

hrc=[]
pc=[]
lines = open("hycom.track", "r")
for line in lines:
  newline = line.split(",")
  a = float(newline[5])
  b = float(newline[8])

  hrc.append(a)
  pc.append(b)
lines.close()

#fig, (ax1, ax2) = plt.subplots(2)
fig, (ax1) = plt.subplots(1)

fig.suptitle("Hurricane TCNAME (YEAR) Max 10m Wind (kt)")

ax1.plot(hrnhc,pnhc,color='black',linestyle='solid',label='NHC BEST')
#ax1.plot(hra,pa,color='red',linestyle='solid',label='MOM6 SST_ana')
ax1.plot(hrb,pb,color='red',linestyle='solid',label='MOM6 SST')
ax1.plot(hrc,pc,color='green',linestyle='solid',label='HYCOM SST')
print(hrnhc)
#print(hra)
print(hrb)
print(hrc)

ax1.legend(loc='best')
#ax2.legend(loc='best')

# For fig x-axis label
#start_day=datetime.datetime.strptime(str(start_date),"%Y-%m-%d").strftime("%m/%d/%Y")
#end_day=datetime.datetime.strptime(str(end_date),"%Y-%m-%d").strftime("%m/%d/%Y")
ax1.set(xlabel='Forecast hours init: YYYYMMDDHH')
ax1.set(Ylabel='Max 10m Wind (kt)')
fig.savefig('TCNAMEYEAR_YYYYMMDDHH_10mVmax.png', dpi = 300)

sys.exit()

